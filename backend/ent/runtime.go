// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/Piichet/app/ent/department"
	"github.com/Piichet/app/ent/doctor"
	"github.com/Piichet/app/ent/office"
	"github.com/Piichet/app/ent/schema"
	"github.com/Piichet/app/ent/specialist"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	departmentFields := schema.Department{}.Fields()
	_ = departmentFields
	// departmentDescDname is the schema descriptor for dname field.
	departmentDescDname := departmentFields[0].Descriptor()
	// department.DnameValidator is a validator for the "dname" field. It is called by the builders before save.
	department.DnameValidator = departmentDescDname.Validators[0].(func(string) error)
	doctorFields := schema.Doctor{}.Fields()
	_ = doctorFields
	// doctorDescName is the schema descriptor for name field.
	doctorDescName := doctorFields[0].Descriptor()
	// doctor.NameValidator is a validator for the "name" field. It is called by the builders before save.
	doctor.NameValidator = doctorDescName.Validators[0].(func(string) error)
	officeFields := schema.Office{}.Fields()
	_ = officeFields
	// officeDescFname is the schema descriptor for fname field.
	officeDescFname := officeFields[0].Descriptor()
	// office.FnameValidator is a validator for the "fname" field. It is called by the builders before save.
	office.FnameValidator = officeDescFname.Validators[0].(func(string) error)
	specialistFields := schema.Specialist{}.Fields()
	_ = specialistFields
	// specialistDescSname is the schema descriptor for sname field.
	specialistDescSname := specialistFields[0].Descriptor()
	// specialist.SnameValidator is a validator for the "sname" field. It is called by the builders before save.
	specialist.SnameValidator = specialistDescSname.Validators[0].(func(string) error)
}
